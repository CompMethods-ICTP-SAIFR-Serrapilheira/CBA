planilha1<-read.csv("Control_CBA.csv",header = TRUE)
planilha2<-read.csv("Micro_CBA.csv",header = TRUE)
head (planilha1)
head (planilha2)
mean (planilha1)
planilha1$NÚMERO.DE.IDENTIFICAÇÃO.IFN.g.IL.2.IL.4.IL.5.IL.6.IL.10.TNF.a
planilha1$IFN.g
attach(IFN.g)
View(planilha1)
#importação das planilhas
planilha1<-read.csv("Control_CBA.xlsx",header = TRUE)
#importação das planilhas
planilha1<-read.table("Control_CBA.xlsx",header = TRUE)
View(planilha1)
#importação das planilhas
planilha1<-read.table("Control_CBA.xlsx",header = TRUE)
#importação das planilhas
planilha1<-read.csv("Control_CBA.csv",header = TRUE, sep = ';')
planilha2<-read.csv("Micro_CBA.csv",header = TRUE, sep = ';')
View(planilha1)
View(planilha2)
#visualização das 6 primeiras linhas das planilhas
head (planilha1)
head (planilha2)
glimpse(planilha1)
#carregando pacotes
if(!require(dplyr))
install.packages("dplyr")
#carregando pacotes
if(!require(dplyr))
install.packages("dplyr")
library(dplyr)
if(!require(psych))
install.packages("psych")
library(psych)
if(!require(psych))
install.packages("psych")
library(psych)
glimpse(planilha1)
glimpse(planilha2)
range(planilha1$IFN.g)
range(planilha1$IL.2)
range(planilha1$IL.4)
range(planilha1$IL.5)
range(planilha1$IL.6)
range(planilha1$IL.10)
range(planilha1$TNF.a)
#avaliação da quantidade de categorias adequadas
nclass.Sturges(planilha1$IFN.g)
#avaliação da quantidade de categorias adequadas
nclass.Sturges(planilha1$IFN.g)
nclass.Sturges(planilha1$IL.2)
nclass.Sturges(planilha1$IL.4)
nclass.Sturges(planilha1$IL.5)
nclass.Sturges(planilha1$IL.6)
nclass.Sturges(planilha1$IL.10)
nclass.Sturges(planilha1$TNF.a)
#criação de uma tabela com as faixas
table(cut(planilha1$IFN.g, seq(0, 1000, l = 7)))
table(cut(planilha1$IL.2, seq(0, 5000, l = 7)))
table(cut(planilha1$IL.4, seq(0, 50, l = 7)))
table(cut(planilha1$IL.5, seq(0, 1500, l = 7)))
table(cut(planilha1$IL.6, seq(350, 10000, l = 7)))
table(cut(planilha1$IL.10, seq(60, 2100, l = 7)))
table(cut(planilha1$TNF.a, seq(0, 7000, l = 7)))
#média, desvio, erro, mediana
describe(planilha1$IFN.g)
#verificação de normalidade das citocinas
shapiro.test(planilha1$IFN.g)
shapiro.test(planilha1$IL.2)
shapiro.test(planilha1$IL.4)
shapiro.test(planilha1$IL.5)
shapiro.test(planilha1$IL.6)
shapiro.test(planilha1$IL.10)
shapiro.test(planilha1$TNF.a)
#importação da planilha
planilha1<-read.csv("Micro_CBA.csv",header = TRUE, sep = ';')
#visualização da planilha
head (planilha2)
glimpse(planilha2)
#análise da amplitude
range(planilha2$IFN.g)
range(planilha2$IL.2)
range(planilha2$IL.4)
range(planilha2$IL.5)
range(planilha2$IL.6)
range(planilha2$IL.10)
range(planilha2$TNF.a)
#avaliação da quantidade de categorias adequadas
nclass.Sturges(planilha2$IFN.g)
nclass.Sturges(planilha2$IL.2)
nclass.Sturges(planilha2$IL.4)
nclass.Sturges(planilha2$IL.5)
nclass.Sturges(planilha2$IL.6)
nclass.Sturges(planilha2$IL.10)
nclass.Sturges(planilha2$TNF.a)
#criação de uma tabela com as faixas
table(cut(planilha2$IFN.g, seq(0, 700, l = 7)))
#visualização da planilha
head (planilha2)
glimpse(planilha2)
View(planilha2)
#carregando pacotes
if(!require(dplyr))
install.packages("dplyr")
library(dplyr)
if(!require(psych))
install.packages("psych")
library(psych)
#importação da planilha
planilha1<-read.csv("Micro_CBA.csv",header = TRUE, sep = ';')
#visualização da planilha
head (planilha2)
glimpse(planilha2)
#análise da amplitude
range(planilha2$IFN.g)
#importação da planilha
planilha1<-read.csv("Micro_CBA.csv",header = TRUE, sep = ';')
#visualização da planilha
head (planilha2)
glimpse(planilha2)
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(RVAideMemoire)) install.packages("RVAideMemoire")
library(RVAideMemoire)
if(!require(car)) install.packages("car")
library(car)
if(!require(psych)) install.packages("psych")
library(psych)
if(!require(rstatix)) install.packages("rstatix")
library(rstatix)
if(!require(DescTools)) install.packages("DescTools")
library(DescTools)
dados <- read.csv2('Completo_CBA.csv')
View(dados)
glimpse(dados)
byf.shapiro(IFN.g ~ GRUPO, dados)
dados <- read.csv2('Completo_CBA.csv', stringsAsFactors = T)
byf.shapiro(IFN.g ~ GRUPO, dados)
glimpse(dados)
dados<-read.csv("Micro_CBA.csv",header = TRUE, sep = ';')
View(dados)
dados<-read.csv("Completo_CBA.csv",header = TRUE, sep = ';')
View(dados)
glimpse(dados)
dados<-read.csv("Completo_CBA.csv",header = TRUE, sep = ';',stringsAsFactors = T)
View(dados)
glimpse(dados)
byf.shapiro(IFN.g ~ GRUPO, dados)
byf.shapiro(IL.2 ~ GRUPO, dados)
byf.shapiro(IFN.g ~ GRUPO, dados)
byf.shapiro(IL.2 ~ GRUPO, dados)
byf.shapiro(IL.4 ~ GRUPO, dados)
byf.shapiro(IL.5 ~ GRUPO, dados)
byf.shapiro(IL.6 ~ GRUPO, dados)
byf.shapiro(IL.10 ~ GRUPO, dados)
byf.shapiro(TNF.a ~ GRUPO, dados)
leveneTest(BC ~ Grupo, dados, center=mean)
leveneTest(IFN.g ~ Grupo, dados, center=mean)
leveneTest(IFN.g ~ GRUPO, dados, center=mean)
leveneTest(IL.2 ~ GRUPO, dados, center=mean)
leveneTest(IL.4 ~ GRUPO, dados, center=mean)
leveneTest(IL.5 ~ GRUPO, dados, center=mean)
leveneTest(IL.6 ~ GRUPO, dados, center=mean)
leveneTest(IL.10 ~ GRUPO, dados, center=mean)
leveneTest(TNF.a ~ GRUPO, dados, center=mean)
#IFNg
dados %>%
group_by(GRUPO) %>%
identify_outliers(IFN.g)
boxplot(IFN.g ~ GRUPO, data = dados, ylab="IFNg (Fg/mL)")
#IFNg
dados %>%
group_by(GRUPO) %>%
identify_outliers(IFN.g)
boxplot(IFN.g ~ GRUPO, data = dados, ylab="IFNg (Fg/mL)")
#IL-2
dados %>%
group_by(GRUPO) %>%
identify_outliers(IL.2)
boxplot(IL.2 ~ GRUPO, data = dados, ylab="IL-2 (Fg/mL)")
#IL-4
dados %>%
group_by(GRUPO) %>%
identify_outliers(IL.4)
boxplot(IL.4 ~ GRUPO, data = dados, ylab="IL-4 (Fg/mL)")
#IL-5
dados %>%
group_by(GRUPO) %>%
identify_outliers(IL.5)
boxplot(IL.5 ~ GRUPO, data = dados, ylab="IL-5 (Fg/mL)")
#IL-6
dados %>%
group_by(GRUPO) %>%
identify_outliers(IL.6)
boxplot(IL.6 ~ GRUPO, data = dados, ylab="IL-6 (Fg/mL)")
#IL-10
dados %>%
group_by(GRUPO) %>%
identify_outliers(IL.10)
boxplot(IL.10 ~ GRUPO, data = dados, ylab="IL-10 (Fg/mL)")
#TNF-a
dados %>%
group_by(GRUPO) %>%
identify_outliers(TNF.a)
boxplot(TNF.a ~ GRUPO, data = dados, ylab="TNF-a (Fg/mL)")
## Criação do modelo para IFNg
anova_IFN.g <- aov(IFN.g ~ GRUPO, dados)
summary(anova_IFN.g)
## Criação do modelo para IL-2
anova_IL.2 <- aov(IL.2 ~ GRUPO, dados)
summary(anova_IL.2)
## Criação do modelo para IL-4
anova_IL.4 <- aov(IL.4 ~ GRUPO, dados)
summary(anova_IL.4)
## Criação do modelo para IL-5
anova_IL.5 <- aov(IL.5 ~ GRUPO, dados)
summary(anova_IL.5)
## Criação do modelo para IL-6
anova_IL.6 <- aov(IL.6 ~ GRUPO, dados)
summary(anova_IL.6)
## Criação do modelo para IL-10
anova_IL.10 <- aov(IL.10 ~ GRUPO, dados)
summary(anova_IL.10)
## Criação do modelo para TNF-a
anova_TNF.a <- aov(TNF.a ~ GRUPO, dados)
summary(anova_TNF.a)
# Uso do Duncan
PostHocTest(anova_IFN.g, method = "duncan")
PostHocTest(anova_IL.2, method = "duncan")
PostHocTest(anova_IL.4, method = "duncan")
PostHocTest(anova_IL.5, method = "duncan")
PostHocTest(anova_IL.6, method = "duncan")
PostHocTest(anova_IL.10, method = "duncan")
PostHocTest(anova_TNF.a, method = "duncan")
# Uso do TukeyHSD
PostHocTest(anova_IFN.g, method = "hsd")
PostHocTest(anova_IL.2, method = "hsd")
PostHocTest(anova_IL.4, method = "hsd")
PostHocTest(anova_IL.5, method = "hsd")
PostHocTest(anova_IL.6, method = "hsd")
PostHocTest(anova_IL.10, method = "hsd")
PostHocTest(anova_TNF.a, method = "hsd")
# Uso do Bonferroni
PostHocTest(anova_IFN.g, method = "bonf")
PostHocTest(anova_IL.2, method = "bonf")
PostHocTest(anova_IL.4, method = "bonf")
PostHocTest(anova_IL.5, method = "bonf")
PostHocTest(anova_IL.6, method = "bonf")
PostHocTest(anova_IL.10, method = "bonf")
PostHocTest(anova_TNF.a, method = "bonf")
##tabela com valores dos post-hoc para cada citocina
#IFNg
round(
cbind(duncan = PostHocTest(anova_IFN.g, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IFN.g, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IFN.g, method="hsd")$GRUPO[,"pval"]),
6)
#IL-2
round(
cbind(duncan = PostHocTest(anova_IL.2, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IL.2, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IL.2, method="hsd")$GRUPO[,"pval"]),
6)
#IL-4
round(
cbind(duncan = PostHocTest(anova_IL.4, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IL.4, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IL.4, method="hsd")$GRUPO[,"pval"]),
6)
#IL-5
round(
cbind(duncan = PostHocTest(anova_IL.5, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IL.5, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IL.5, method="hsd")$GRUPO[,"pval"]),
6)
#IL-6
round(
cbind(duncan = PostHocTest(anova_IL.6, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IL.6, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IL.6, method="hsd")$GRUPO[,"pval"]),
6)
#IL-10
round(
cbind(duncan = PostHocTest(anova_IL.10, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_IL.10, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_IL.10, method="hsd")$GRUPO[,"pval"]),
6)
#TNFa
round(
cbind(duncan = PostHocTest(anova_TNF.a, method="duncan")$GRUPO[,"pval"],
bonf = PostHocTest(anova_TNF.a, method="bonf")$GRUPO[,"pval"],
hsd = PostHocTest(anova_TNF.a, method="hsd")$GRUPO[,"pval"]),
6)
# Passo 8 (opcional): Análise descritiva dos dados
describeBy(dados$BC, group = dados$Grupo)
#Análise descritiva dos dados por citocina
describeBy(dados$IFN.g, group = dados$GRUPO)
describeBy(dados$IL.2, group = dados$GRUPO)
#Análise descritiva dos dados por citocina
describeBy(dados$IFN.g, group = dados$GRUPO)
describeBy(dados$IL.2, group = dados$GRUPO)
describeBy(dados$IL.4, group = dados$GRUPO)
describeBy(dados$IL.5, group = dados$GRUPO)
describeBy(dados$IL.6, group = dados$GRUPO)
describeBy(dados$IL.10, group = dados$GRUPO)
describeBy(dados$TNF.a, group = dados$GRUPO)
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(dplyr)) install.packages("rstatix")
library(rstatix)
#Carregar o banco de dados
dados<-read.csv("Completo_CBA.csv",header = TRUE, sep = ';',stringsAsFactors = T)
View(dados)
glimpse(dados)
wilcox.test(IFN.g ~ GRUPO, data = dados)
wilcox.test(IL.2 ~ GRUPO, data = dados)
wilcox.test(IL.4 ~ GRUPO, data = dados)
wilcox.test(IL.5 ~ GRUPO, data = dados)
wilcox.test(IL.6 ~ GRUPO, data = dados)
wilcox.test(IL.10 ~ GRUPO, data = dados)
wilcox.test(TNF.a ~ GRUPO, data = dados)
dados %>% group_by(GRUPO) %>%
get_summary_stats(IFN.g, IL.2, IL.4, IL.5, IL.6, IL.10, TNF.a, type = "median_iqr")
#Visualização da distribuição
#IFN-g
par(mfrow=c(1,2))
hist(dados$IFN.g[dados$GRUPO == "CONTROL"],
ylab="IFN-g (Fg/mL)", xlab="Control")
hist(dados$IFN.g[dados$GRUPO == "MICRO"],
ylab="IFN-g (Fg/mL)", xlab="Microcephaly", main="IFN-g")
#IFN-g
par(mfrow=c(1,2))
hist(dados$IFN.g[dados$GRUPO == "CONTROL"],
ylab="IFN-g (Fg/mL)", xlab="Control")
hist(dados$IFN.g[dados$GRUPO == "MICRO"],
ylab="IFN-g (Fg/mL)", xlab="Microcephaly", main="IFN-g")
#Visualização da distribuição
#IFN-g
par(mfrow=c(1,2))
hist(dados$IFN.g[dados$GRUPO == "CONTROL"],
ylab="IFN-g (Fg/mL)", xlab="Control", main="IFN-g control")
hist(dados$IFN.g[dados$GRUPO == "MICRO"],
ylab="IFN-g (Fg/mL)", xlab="Microcephaly", main="IFN-g microcephaly")
#IL-2
par(mfrow=c(1,2))
hist(dados$IL.2[dados$GRUPO == "CONTROL"],
ylab="IL-2 (Fg/mL)", xlab="Control", main="IL.2 control")
#IL-2
par(mfrow=c(1,2))
hist(dados$IL.2[dados$GRUPO == "CONTROL"],
ylab="IL-2 (Fg/mL)", xlab="Control", main="IL-2 control")
hist(dados$IL.2[dados$GRUPO == "MICRO"],
ylab="IL.2 (Fg/mL)", xlab="Microcephaly", main="IL-2 microcephaly")
#IL-4
par(mfrow=c(1,2))
hist(dados$IL.4[dados$GRUPO == "CONTROL"],
ylab="IL-4 (Fg/mL)", xlab="Control", main="IL-4 control")
hist(dados$IL.4[dados$GRUPO == "MICRO"],
ylab="IL-4 (Fg/mL)", xlab="Microcephaly", main="IL-4 microcephaly")
#IL-5
par(mfrow=c(1,2))
hist(dados$IL.5[dados$GRUPO == "CONTROL"],
ylab="IL.5 (Fg/mL)", xlab="Control", main="IL-5 control")
#IL-5
par(mfrow=c(1,2))
hist(dados$IL.5[dados$GRUPO == "CONTROL"],
ylab="IL-5 (Fg/mL)", xlab="Control", main="IL-5 control")
hist(dados$IL.5[dados$GRUPO == "MICRO"],
ylab="IL-5 (Fg/mL)", xlab="Microcephaly", main="IL-5 microcephaly")
#IL-6
par(mfrow=c(1,2))
hist(dados$IL.6[dados$GRUPO == "CONTROL"],
ylab="IL-6 (Fg/mL)", xlab="Control", main="IL-6 control")
hist(dados$IL.6[dados$GRUPO == "MICRO"],
ylab="IL-6 (Fg/mL)", xlab="Microcephaly", main="IL-6 microcephaly")
#IL-10
par(mfrow=c(1,2))
hist(dados$IL.10[dados$GRUPO == "CONTROL"],
ylab="IL-10 (Fg/mL)", xlab="Control", main="IL-10 control")
hist(dados$IL.10[dados$GRUPO == "MICRO"],
ylab="IL-10 (Fg/mL)", xlab="Microcephaly", main="IL-19 microcephaly")
#IL-10
par(mfrow=c(1,2))
hist(dados$IL.10[dados$GRUPO == "CONTROL"],
ylab="IL-10 (Fg/mL)", xlab="Control", main="IL-10 control")
hist(dados$IL.10[dados$GRUPO == "MICRO"],
ylab="IL-10 (Fg/mL)", xlab="Microcephaly", main="IL-10 microcephaly")
#TNF-a
par(mfrow=c(1,2))
hist(dados$TNF.a[dados$GRUPO == "CONTROL"],
ylab="TNF-a (Fg/mL)", xlab="Control", main="TNF-a control")
hist(dados$TNF.a[dados$GRUPO == "MICRO"],
ylab="TNF-a (Fg/mL)", xlab="Microcephaly", main="TNF-a microcephaly")
# Carregamento dos pacotes
if(!require(pacman)){install.packages("pacman")}
pacman::p_load(ggplot2, dplyr)
# Carregamento do banco de dados
dados<-read.csv("Completo_CBA.csv",header = TRUE, sep = ';',stringsAsFactors = T)
### Histograma (Orçamentos de produção)
ggplot(data = dados$IFN.g ~ GRUPO) +
geom_histogram(aes(x = ))
